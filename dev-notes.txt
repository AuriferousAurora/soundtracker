This is going to serve as way for me to write about what I am currently doing  when I complete a coding session. 
In theory, I can return to this file and read about what my current thought process as I wrap up and thus can ensure I don't forget what my current plans are. 
Also, maybe it will be easier to get back into my workflow without having to redecipher all my code.

I built this app using the starter code located here: https://github.com/jmperez/passport-spotify/tree/master/examples/login
This is the API reference: https://developer.spotify.com/documentation/web-api/reference/
I should probably read through these guides at some point: https://developer.spotify.com/documentation/general/guides/

:: 2020.09.15::

This is the end of my first session of coding. 


I still don't fully understand the login process and I only partially understand the templating engine (nunjucks), but it's similar enough to the only other one I'm familiar with (whatever engine Django for Python uses). 

I may decide to redesing the frontend with React or something else, but for now Node.JS for the backend and basic HTML/CSS/JS and Nunjucks should serve well.

In 'app.js', on line 45, I'm implementing a pretty basic request using node-fetch and logging the response object to the console. My plan is to have reviewed Net Ninja's tutorial on asynchronous JavaScript and maybe play around with some other async code so I can return to this and have a few more clues about how I want to proceed. Right now I'm guessing that I'll want to do some basic error-handling, change the URL to grab my playlists instead of my profile info, grab some info out of whatever I get back, and then shove it in some HTML using the Nunjucks templating system.

Ideally, I'll be able to have a deeper understanding of what I'm doing as I go.

:: 2020.09.26 ::

So, I have some questions:

What does the 'done' function do inside the passport.js code?

Do I have access to the 'accessToken' variable inside of the home route? If not, how do I pass that to route? Is it bad if I assign it to a global variable (probably).

:: 2020.09.27 ::

Still don't know what the done function does.

Currently, I'm assigning the accessToken that is returned during the passport authentication to a global variable and utilizing that in the home route to grab playlists. I still don't know enough about asnychronous JavasScript and the Express framework, so I'll
likely work on the CSS and finish the Node JWT tutorial before I return to this.

:: 2020.10.05 ::

Learned a lot today. I can add set the passReqToCallback property on the SpotifyStrategy to 'true' and have access to the request object in my callback function. That allows me to store the accessToken in the req.session object and use it elsewhere in the application.

I will likely want to write some code that handle what happens if the accessToken expries while the user is doing something.

... 

I have a successful fetch request applied to each button in my HTML collection of playlist items. Clicking the view button send a successful get request to the proper route but nothing else is happening. I suspect my ignorance of Express is the culprit.